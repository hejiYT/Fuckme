# 1 "../arch/arm64/boot/dts/qcom/sm4450-qrd.dts"
# 1 "<built-in>" 1
# 1 "<built-in>" 3






# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "../arch/arm64/boot/dts/qcom/sm4450-qrd.dts" 2





/dts-v1/;

# 1 "../arch/arm64/boot/dts/qcom/sm4450.dtsi" 1





# 1 "../scripts/dtc/include-prefixes/dt-bindings/gpio/gpio.h" 1
# 7 "../arch/arm64/boot/dts/qcom/sm4450.dtsi" 2
# 1 "../scripts/dtc/include-prefixes/dt-bindings/interrupt-controller/arm-gic.h" 1








# 1 "../scripts/dtc/include-prefixes/dt-bindings/interrupt-controller/irq.h" 1
# 10 "../scripts/dtc/include-prefixes/dt-bindings/interrupt-controller/arm-gic.h" 2
# 8 "../arch/arm64/boot/dts/qcom/sm4450.dtsi" 2

/ {
 interrupt-parent = <&intc>;

 #address-cells = <2>;
 #size-cells = <2>;

 chosen { };

 clocks{
  xo_board: xo-board {
   compatible = "fixed-clock";
   clock-frequency = <76800000>;
   #clock-cells = <0>;
  };

  sleep_clk: sleep-clk {
   compatible = "fixed-clock";
   clock-frequency = <32000>;
   #clock-cells = <0>;
  };
 };

 cpus {
  #address-cells = <2>;
  #size-cells = <0>;

  CPU0: cpu@0 {
   device_type = "cpu";
   compatible = "arm,cortex-a55";
   reg = <0x0 0x0>;
   enable-method = "psci";
   next-level-cache = <&L2_0>;
   power-domains = <&CPU_PD0>;
   power-domain-names = "psci";
   #cooling-cells = <2>;

   L2_0: l2-cache {
    compatible = "cache";
    cache-level = <2>;
    cache-unified;
    next-level-cache = <&L3_0>;

    L3_0: l3-cache {
     compatible = "cache";
     cache-level = <3>;
     cache-unified;
    };
   };
  };

  CPU1: cpu@100 {
   device_type = "cpu";
   compatible = "arm,cortex-a55";
   reg = <0x0 0x100>;
   enable-method = "psci";
   next-level-cache = <&L2_100>;
   power-domains = <&CPU_PD0>;
   power-domain-names = "psci";
   #cooling-cells = <2>;

   L2_100: l2-cache {
    compatible = "cache";
    cache-level = <2>;
    cache-unified;
    next-level-cache = <&L3_0>;
   };
  };

  CPU2: cpu@200 {
   device_type = "cpu";
   compatible = "arm,cortex-a55";
   reg = <0x0 0x200>;
   enable-method = "psci";
   next-level-cache = <&L2_200>;
   power-domains = <&CPU_PD0>;
   power-domain-names = "psci";
   #cooling-cells = <2>;

   L2_200: l2-cache {
    compatible = "cache";
    cache-level = <2>;
    cache-unified;
    next-level-cache = <&L3_0>;
   };
  };

  CPU3: cpu@300 {
   device_type = "cpu";
   compatible = "arm,cortex-a55";
   reg = <0x0 0x300>;
   enable-method = "psci";
   next-level-cache = <&L2_300>;
   power-domains = <&CPU_PD0>;
   power-domain-names = "psci";
   #cooling-cells = <2>;

   L2_300: l2-cache {
    compatible = "cache";
    cache-level = <2>;
    cache-unified;
    next-level-cache = <&L3_0>;
   };
  };

  CPU4: cpu@400 {
   device_type = "cpu";
   compatible = "arm,cortex-a55";
   reg = <0x0 0x400>;
   enable-method = "psci";
   next-level-cache = <&L2_400>;
   power-domains = <&CPU_PD0>;
   power-domain-names = "psci";
   #cooling-cells = <2>;

   L2_400: l2-cache {
    compatible = "cache";
    cache-level = <2>;
    cache-unified;
    next-level-cache = <&L3_0>;
   };
  };

  CPU5: cpu@500 {
   device_type = "cpu";
   compatible = "arm,cortex-a55";
   reg = <0x0 0x500>;
   enable-method = "psci";
   next-level-cache = <&L2_500>;
   power-domains = <&CPU_PD0>;
   power-domain-names = "psci";
   #cooling-cells = <2>;

   L2_500: l2-cache {
    compatible = "cache";
    cache-level = <2>;
    cache-unified;
    next-level-cache = <&L3_0>;
   };
  };

  CPU6: cpu@600 {
   device_type = "cpu";
   compatible = "arm,cortex-a78";
   reg = <0x0 0x600>;
   enable-method = "psci";
   next-level-cache = <&L2_600>;
   power-domains = <&CPU_PD0>;
   power-domain-names = "psci";
   #cooling-cells = <2>;

   L2_600: l2-cache {
    compatible = "cache";
    cache-level = <2>;
    cache-unified;
    next-level-cache = <&L3_0>;
   };
  };

  CPU7: cpu@700 {
   device_type = "cpu";
   compatible = "arm,cortex-a78";
   reg = <0x0 0x700>;
   enable-method = "psci";
   next-level-cache = <&L2_700>;
   power-domains = <&CPU_PD0>;
   power-domain-names = "psci";
   #cooling-cells = <2>;

   L2_700: l2-cache {
    compatible = "cache";
    cache-level = <2>;
    cache-unified;
    next-level-cache = <&L3_0>;
   };
  };

  cpu-map {
   cluster0 {
    core0 {
     cpu = <&CPU0>;
    };

    core1 {
     cpu = <&CPU1>;
    };

    core2 {
     cpu = <&CPU2>;
    };

    core3 {
     cpu = <&CPU3>;
    };

    core4 {
     cpu = <&CPU4>;
    };

    core5 {
     cpu = <&CPU5>;
    };

    core6 {
     cpu = <&CPU6>;
    };

    core7 {
     cpu = <&CPU7>;
    };
   };
  };

  idle-states {
   entry-method = "psci";

   LITTLE_CPU_SLEEP_0: cpu-sleep-0-0 {
    compatible = "arm,idle-state";
    arm,psci-suspend-param = <0x40000004>;
    entry-latency-us = <800>;
    exit-latency-us = <750>;
    min-residency-us = <4090>;
    local-timer-stop;
   };

   BIG_CPU_SLEEP_0: cpu-sleep-1-0 {
    compatible = "arm,idle-state";
    arm,psci-suspend-param = <0x40000004>;
    entry-latency-us = <600>;
    exit-latency-us = <1550>;
    min-residency-us = <4791>;
    local-timer-stop;
   };
  };

  domain-idle-states {
   CLUSTER_SLEEP_0: cluster-sleep-0 {
    compatible = "domain-idle-state";
    arm,psci-suspend-param = <0x41000044>;
    entry-latency-us = <1050>;
    exit-latency-us = <2500>;
    min-residency-us = <5309>;
   };

   CLUSTER_SLEEP_1: cluster-sleep-1 {
    compatible = "domain-idle-state";
    arm,psci-suspend-param = <0x41003344>;
    entry-latency-us = <1561>;
    exit-latency-us = <2801>;
    min-residency-us = <8550>;
   };
  };
 };

 memory@a0000000 {
  device_type = "memory";

  reg = <0x0 0xa0000000 0x0 0x0>;
 };

 pmu {
  compatible = "arm,armv8-pmuv3";
  interrupts = <1 7 4>;
 };

 psci {
  compatible = "arm,psci-1.0";
  method = "smc";

  CPU_PD0: power-domain-cpu0 {
   #power-domain-cells = <0>;
   power-domains = <&CLUSTER_PD>;
   domain-idle-states = <&LITTLE_CPU_SLEEP_0>;
  };

  CPU_PD1: power-domain-cpu1 {
   #power-domain-cells = <0>;
   power-domains = <&CLUSTER_PD>;
   domain-idle-states = <&LITTLE_CPU_SLEEP_0>;
  };

  CPU_PD2: power-domain-cpu2 {
   #power-domain-cells = <0>;
   power-domains = <&CLUSTER_PD>;
   domain-idle-states = <&LITTLE_CPU_SLEEP_0>;
  };

  CPU_PD3: power-domain-cpu3 {
   #power-domain-cells = <0>;
   power-domains = <&CLUSTER_PD>;
   domain-idle-states = <&LITTLE_CPU_SLEEP_0>;
  };

  CPU_PD4: power-domain-cpu4 {
   #power-domain-cells = <0>;
   power-domains = <&CLUSTER_PD>;
   domain-idle-states = <&BIG_CPU_SLEEP_0>;
  };

  CPU_PD5: power-domain-cpu5 {
   #power-domain-cells = <0>;
   power-domains = <&CLUSTER_PD>;
   domain-idle-states = <&BIG_CPU_SLEEP_0>;
  };

  CPU_PD6: power-domain-cpu6 {
   #power-domain-cells = <0>;
   power-domains = <&CLUSTER_PD>;
   domain-idle-states = <&BIG_CPU_SLEEP_0>;
  };

  CPU_PD7: power-domain-cpu7 {
   #power-domain-cells = <0>;
   power-domains = <&CLUSTER_PD>;
   domain-idle-states = <&BIG_CPU_SLEEP_0>;
  };

  CLUSTER_PD: power-domain-cpu-cluster0 {
   #power-domain-cells = <0>;
   domain-idle-states = <&CLUSTER_SLEEP_0>, <&CLUSTER_SLEEP_1>;
  };
 };

 soc: soc@0 {
  #address-cells = <2>;
  #size-cells = <2>;
  ranges = <0 0 0 0 0x10 0>;
  dma-ranges = <0 0 0 0 0x10 0>;
  compatible = "simple-bus";

  tcsr_mutex: hwlock@1f40000 {
   compatible = "qcom,tcsr-mutex";
   reg = <0x0 0x01f40000 0x0 0x40000>;
   #hwlock-cells = <1>;
  };

  pdc: interrupt-controller@b220000 {
   compatible = "qcom,sm4450-pdc", "qcom,pdc";
   reg = <0 0x0b220000 0 0x30000>, <0 0x174000f0 0 0x64>;
   qcom,pdc-ranges = <0 480 94>, <94 494 31>,
       <125 63 1>;
   #interrupt-cells = <2>;
   interrupt-parent = <&intc>;
   interrupt-controller;
  };

  intc: interrupt-controller@17200000 {
   compatible = "arm,gic-v3";
   reg = <0x0 0x17200000 0x0 0x10000>,
         <0x0 0x17260000 0x0 0x100000>;
   interrupts = <1 9 8>;
   #interrupt-cells = <3>;
   interrupt-controller;
   #redistributor-regions = <1>;
   redistributor-stride = <0x0 0x20000>;
  };

  timer@17420000 {
   compatible = "arm,armv7-timer-mem";
   reg = <0x0 0x17420000 0x0 0x1000>;
   ranges = <0 0 0 0x20000000>;
   #address-cells = <1>;
   #size-cells = <1>;

   frame@17421000 {
    reg = <0x17421000 0x1000>,
          <0x17422000 0x1000>;
    frame-number = <0>;
    interrupts = <0 8 4>,
          <0 6 4>;
   };

   frame@17423000 {
    reg = <0x17423000 0x1000>;
    frame-number = <1>;
    interrupts = <0 9 4>;
    status = "disabled";
   };

   frame@17425000 {
    reg = <0x17425000 0x1000>;
    frame-number = <2>;
    interrupts = <0 10 4>;
    status = "disabled";
   };

   frame@17427000 {
    reg = <0x17427000 0x1000>;
    frame-number = <3>;
    interrupts = <0 11 4>;
    status = "disabled";
   };

   frame@17429000 {
    reg = <0x17429000 0x1000>;
    frame-number = <4>;
    interrupts = <0 12 4>;
    status = "disabled";
   };

   frame@1742b000 {
    reg = <0x1742b000 0x1000>;
    frame-number = <5>;
    interrupts = <0 13 4>;
    status = "disabled";
   };

   frame@1742d000 {
    reg = <0x1742d000 0x1000>;
    frame-number = <6>;
    interrupts = <0 14 4>;
    status = "disabled";
   };
  };
 };

 timer {
  compatible = "arm,armv8-timer";
  interrupts = <1 13 ((((1 << (8)) - 1) << 8) | 8)>,
        <1 14 ((((1 << (8)) - 1) << 8) | 8)>,
        <1 11 ((((1 << (8)) - 1) << 8) | 8)>,
        <1 10 ((((1 << (8)) - 1) << 8) | 8)>;
 };
};
# 9 "../arch/arm64/boot/dts/qcom/sm4450-qrd.dts" 2
/ {
 model = "Qualcomm Technologies, Inc. SM4450 QRD";
 compatible = "qcom,sm4450-qrd", "qcom,sm4450";

 aliases { };

 chosen {
  bootargs = "console=hvc0";
 };
};
